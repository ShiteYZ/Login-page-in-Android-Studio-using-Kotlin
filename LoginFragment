package yourcompany.co.tz

import android.content.Context.MODE_PRIVATE
import android.os.Bundle
import android.util.Log
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.databinding.DataBindingUtil
import androidx.lifecycle.lifecycleScope
import androidx.navigation.fragment.findNavController
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext
import tanrail.co.tz.databinding.FragmentLoginBinding

class LoginFragment : Fragment() {

    lateinit var binding : FragmentLoginBinding

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        // Inflate the layout for this fragment
        binding = DataBindingUtil.inflate(layoutInflater, R.layout.fragment_login, container, false)
        initView()
        return binding.root
    }

    private fun initView() {
        val prefs = activity?.getSharedPreferences("myNewPrefs", MODE_PRIVATE)
        val editor = prefs?.edit()

        binding.loginbutton.setOnClickListener{
            val username = binding.loginusername.text.toString()
            val password = binding.loginpassword.text.toString()

            lifecycleScope.launch(Dispatchers.IO) {
                try {
                    val result = RetrofitInstance.api.loginUser(username, password)
                    if (result.isSuccessful && result.body() != null){
                        withContext(Dispatchers.Main){
                        Toast.makeText(activity, "Something went Wrong", Toast.LENGTH_SHORT).show()
                        if(!result.body()!!.result.error && result.body()!!.user != null){
                            editor?.putString("username", username)
                            editor?.apply()
                            findNavController().navigate(R.id.action_loginFragment_to_trains)
                        }else{
                            Log.d("checkApiError", result.body()!!.result.message)
                        }
                        }
                    }else{
                        withContext(Dispatchers.Main){
                        Toast.makeText(activity, "Something went Wrong", Toast.LENGTH_SHORT).show()
                        }
                    }
                }catch (e : Exception){
                    withContext(Dispatchers.Main){
                        Toast.makeText(activity, "There is No Network Connection /n Contact Admin", Toast.LENGTH_SHORT).show()
                        editor?.putString("username", username)
                        editor?.apply()
                        findNavController().navigate(R.id.action_loginFragment_to_trains)
                    }
                }
            }
        }
    }

}
